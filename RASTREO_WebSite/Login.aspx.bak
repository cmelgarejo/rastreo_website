Imports System.Collections.Generic
Imports RASTREOmw
Imports System.Diagnostics
Imports System.Threading
Imports System.Globalization

Partial Class _RASTREOLogin
    Inherits System.Web.UI.Page

    Const TOTAL_INTENTOS As Int16 = 5

    Protected Overloads Overrides Sub Render(ByVal writer As HtmlTextWriter)
        Utilidades.CompresionASPX(HttpContext.Current)
        MyBase.Render(writer)
    End Sub

    Protected Overrides Sub InitializeCulture()
        If Request.Form("ctl00$header_ContentPlaceHolder$ddlLang") IsNot Nothing Then
            Dim selectedLanguage As String = _
                (Request.Form("ctl00$header_ContentPlaceHolder$ddlLang"))
            UICulture = Request.Form("ctl00$header_ContentPlaceHolder$ddlLang")
            Culture = Request.Form("ctl00$header_ContentPlaceHolder$ddlLang")
            Thread.CurrentThread.CurrentCulture = _
                CultureInfo.CreateSpecificCulture(selectedLanguage)
            Thread.CurrentThread.CurrentUICulture = New  _
                CultureInfo(selectedLanguage)
        End If
        MyBase.InitializeCulture()
    End Sub

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init

    End Sub

    Protected Sub Page_LoadComplete(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.LoadComplete
        Try
            Dim mensaje As String = String.Empty
            mensaje = ViewState("msjerror")
            If mensaje = String.Empty Then
                mensaje = Session("msjerror")
                Session.Remove("msjerror")
            End If
            If mensaje <> String.Empty Then
                errMsgs.Text = mensaje
                errMsgs.Visible = True
                ViewState.Remove("msjerror")
            Else
                errMsgs.Visible = False
            End If
            If Request.QueryString.Count > 0 Then
                If Not Request.QueryString("to") Is Nothing Then
                    errMsgs.Text = "La sesion ha expirado."
                    errMsgs.Visible = True
                End If
            End If
        Catch myEX As Exception
            ViewState.Add("msjerror", myEX.Message + "<br>" + myEX.StackTrace)
        End Try
    End Sub

    Protected Sub Login_RASTREO_Authenticate(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.AuthenticateEventArgs) Handles Login_RASTREO.Authenticate
        doAuthenticate(Login_RASTREO.UserName, Login_RASTREO.Password)
    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not Request.Form("usu") Is Nothing And _
           Not Request.Form("contra") Is Nothing Then
            Dim USER As String = Convert.ToString(Request.Form("usu"))
            Dim PASS As String = Convert.ToString(Request.Form("contra"))
            doAuthenticate(USER, PASS)
        Else
            If Not IsPostBack Then
                Session.Abandon()
            End If
            Login_RASTREO.Focus()
        End If
    End Sub

    Private Sub doAuthenticate(ByVal USERNAME As String, ByVal PASSWORD As String)
        Dim tblUsuarios As New rastreo_usuarios(cnn_str.CadenaDeConexion)
        Dim IpAccesando As String = GetIPAddress()
        Dim autenticado As Boolean = False
        USERNAME = USERNAME.Trim()
        PASSWORD = PASSWORD.Trim()
        Try
            With tblUsuarios
                .Where.Usuario.Value = USERNAME
                If .Query.Load() Then
                    If .RowCount = 1 Then
                        If .Intentos_login < TOTAL_INTENTOS Then
                            If .Pass = Cryptografia.SHA256Hash(PASSWORD) Then
                                .Fech_login = Now
                                .Intentos_login = 0
                                .Save()
                                Utilidades.Informaciones_del_sistema("Se ha ingresado exitosamente al sistema con el usuario: [" + _
                                        USERNAME + "] " + Environment.NewLine + _
                                        "Desde la ip: " + IpAccesando + Environment.NewLine + _
                                        "Browser: " + Request.Browser.Browser + " " + Request.Browser.Version + Environment.NewLine + _
                                        "Fecha y hora del acceso: " + Now.ToString(), EventLogEntryType.Information)
                                Dim user As Usuario = Nothing
                                user = AsignarUser(USERNAME, .Id_persona, .Idrastreo_usuarios)
                                If Not user Is Nothing Then
                                    autenticado = True
                                    Dim URLStr As String = String.Empty
                                    URLStr = Request.QueryString("rp")
                                    If URLStr <> String.Empty And Not user.Cliente Then
                                        Response.Redirect(URLStr)
                                    Else
                                        If user.Empleado Then
                                            'Session.Timeout = 4 * 60
                                            Response.Redirect("~/Principal.aspx")
                                        ElseIf user.Cliente Then
                                            If Utilidades.FindPermissionFor(user.idUsuario, "OPCION_BUSES") Then
                                                Response.Redirect("~/bus_main.aspx")
                                            ElseIf Utilidades.FindPermissionFor(user.idUsuario, "OPCION_SEGURO") Then
                                                Response.Redirect("~/insurance_mainGPS.aspx")
                                            ElseIf Utilidades.FindPermissionFor(user.idUsuario, "MENU_USUARIOS") Then
                                                Response.Redirect("~/mainGPS.aspx")
                                            End If
                                        End If
                                    End If
                                End If
                            Else
                                If .s_Intentos_login <> String.Empty Then
                                    If .Intentos_login < TOTAL_INTENTOS Then
                                        ViewState.Add("msjerror", "Tiene " & TOTAL_INTENTOS - .Intentos_login & " intentos restantes.")
                                        Utilidades.Informaciones_del_sistema("Se ha intentado accesar erroneamente al usuario [" + _
                                                USERNAME + "] " + Environment.NewLine + _
                                                "Desde la ip: " + IpAccesando + Environment.NewLine + _
                                                "Intentos: " + .Intentos_login.ToString() + Environment.NewLine + _
                                                "Browser: " + Request.Browser.Browser + " " + Request.Browser.Version + Environment.NewLine + _
                                                "Fecha y hora del acceso: " + Now.ToString(), EventLogEntryType.Warning)
                                    End If
                                    .Intentos_login += 1
                                    .Save()
                                End If
                            End If
                        Else
                            ViewState.Add("msjerror", "El usuario ha sido bloqueado por razones de seguridad, por favor comuniquese con la empresa.")
                            If .Intentos_login = TOTAL_INTENTOS Then
                                Utilidades.Informaciones_del_sistema("ATENCION! El usuario [" + _
                                        USERNAME + "] ha sido bloqueado por seguridad " + Environment.NewLine + _
                                        "Desde la ip: " + IpAccesando + Environment.NewLine + _
                                        "Intentos: " + .Intentos_login.ToString() + Environment.NewLine + _
                                        "Browser: " + Request.Browser.Browser + " " + Request.Browser.Version + Environment.NewLine + _
                                        "Fecha y hora del acceso: " + Now.ToString(), EventLogEntryType.Error)
                            End If
                            .Intentos_login += 1
                            .Save()
                        End If
                    End If
                End If
                If Request.QueryString.Count > 0 And autenticado = False Then
                    If Not Request.QueryString("to") Is Nothing Then
                        Response.Redirect("Login.aspx")
                    End If
                End If
            End With
        Catch ex As Exception
            ViewState.Add("msjerror", ex.ToString())
        End Try
    End Sub

    Private Function AsignarUser(ByVal user As String, ByVal personaid As Integer, ByVal userid As Integer) As Usuario
        Dim tblPERSONA As New rastreo_persona(cnn_str.CadenaDeConexion)
        Dim tblCLIENTE As New rastreo_cliente(cnn_str.CadenaDeConexion)
        Dim tblEMPLEADO As New rastreo_empleados(cnn_str.CadenaDeConexion)
        Dim Nombre As String = String.Empty
        Dim idSEGURO As Integer = 0
        Dim Empleado As Boolean = False
        Dim Cliente As Boolean = False
        Dim superuser As Boolean = False
        Try
            With tblPERSONA
                .LoadByPrimaryKey(personaid)
                If .s_Id_seguro <> String.Empty Then
                    idSEGURO = .Id_seguro
                End If
                If .Nombre <> String.Empty Or .Apellido <> String.Empty Then
                    Nombre = .Nombre + " " + .Apellido
                ElseIf .Razon_social <> String.Empty Then
                    Nombre = .Razon_social
                End If
            End With

            With tblEMPLEADO
                .LoadByPrimaryKey(personaid)
                If .s_Acceso_sistema <> String.Empty Or .s_Estado_empleado <> String.Empty Then
                    If .Estado_empleado Then 'si estas activo
                        If .Acceso_sistema Then 'y tenes permiso de entrar al sistema
                            Empleado = True ' ingresas
                        Else
                            Return Nothing 'sino, salis
                        End If
                    Else
                        Return Nothing
                    End If
                End If
            End With

            With tblCLIENTE
                .LoadByPrimaryKey(personaid)
                If .s_Acceso_sistema <> String.Empty Then
                    If .Acceso_sistema Then
                        Cliente = True
                    Else
                        Return Nothing
                    End If
                    If Empleado Then
                        ' Empleado = False 'Si sos empleado te tratamos como cliente?
                    End If
                End If
            End With

            Dim NombrePersona As String = String.Empty
            Dim tblUSU As New rastreo_usuarios(cnn_str.CadenaDeConexion)
            With tblUSU
                If .LoadByPrimaryKey(userid) Then
                    If .s_Usuario <> String.Empty Then
                        If .s_Su <> String.Empty Then
                            superuser = .Su
                        End If
                        NombrePersona = .Nombre_completo
                    End If
                End If
            End With

            Dim myUser As New Usuario
            myUser.idSeguro = idSEGURO
            myUser.Usuario = user
            myUser.idUsuario = userid
            myUser.idPersona = personaid
            myUser.IP = GetIPAddress()
            myUser.NombreUsuario = NombrePersona
            myUser.Nombre = Nombre
            myUser.Cliente = Cliente
            myUser.Empleado = Empleado
            myUser.SU = superuser
            Session.Add("session_UsuarioRASTREO", myUser)
            'Utilidades.HazmeImagen(NombrePersona, "C:\usuario.png", System.Drawing.Imaging.ImageFormat.Png)
            Return myUser
        Catch ex As Exception
            Session.Add("msjerror", ex.ToString())
            Return Nothing
        End Try
    End Function

    Private Function GetIPAddress() As String
        Try
            Dim sIPAddress As String
            sIPAddress = Request.ServerVariables("HTTP_X_FORWARDED_FOR")
            If sIPAddress = String.Empty Then
                sIPAddress = Request.ServerVariables("REMOTE_ADDR")
            End If
            Return sIPAddress
        Catch ex As Exception
            Return String.Empty
            Session.Add("msjerror", ex.ToString())
        End Try
    End Function
End Class
